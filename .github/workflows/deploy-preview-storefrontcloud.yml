name: Deploy PR Preview on Storefrontcloud
env:
  CANARY_SW6_INSTANCE: https://shopware6-demo.vuestorefront.io
  CANARY_SW6_INSTANCE_TOKEN: SWSCVJJET0RQAXFNBMTDZTV1OQ
  INSTANCE_CODE: shopware-pwa-canary
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  init:
    name: Init dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Cache node_modules
        uses: actions/cache@v2
        id: step-cache-node-modules
        env:
          cache-name: cache-node-modules-test
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Install dependencies
        if: steps.step-cache-node-modules.outputs.cache-hit != 'true'
        run: |
          yarn --frozen-lockfile

  build-cli:
    name: Build CLI
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Check hash for directory - to check
        id: folder-hash-step
        # uses: theowenyoung/folder-hash@v2.0.1
        run: |
          HASH=$(git rev-parse HEAD:packages/cli)
          echo "::set-output name=hash::$HASH"
          echo "Hash is: $HASH"
        # with:
        #   path: packages/cli
      - name: Cache cli build
        id: step-cache-build
        uses: actions/cache@v2
        env:
          cache-name: test-cache-cli-build
        with:
          path: |
            packages/cli/build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}-${{ steps.folder-hash-step.outputs.hash }}
      - name: Cache node_modules
        if: steps.step-cache-build.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-test
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Build CLI
        if: steps.step-cache-build.outputs.cache-hit != 'true'
        run: |
          cd ./packages/cli/
          yarn build
      - name: Upload build folder
        uses: actions/upload-artifact@v2
        with:
          name: cli-build
          path: ./packages/cli/build/

  build-composables:
    name: Build composables package
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Check if composables has changed
        uses: marceloprado/has-changed-path@master
        id: package-changed-step
        with:
          paths: packages/composables
      - name: Cache composables build
        if: steps.package-changed-step.outputs.changed != 'true'
        id: step-cache-build
        uses: actions/cache@v2
        env:
          cache-name: test-cache-composables-build
        with:
          path: |
            packages/composables/dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Cache node_modules
        if: steps.package-changed-step.outputs.changed == 'true' || steps.step-cache-build.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-test
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Build Composables
        if: steps.package-changed-step.outputs.changed == 'true' || steps.step-cache-build.outputs.cache-hit != 'true'
        run: |
          yarn build composables --ci
      - name: Upload build folder
        uses: actions/upload-artifact@v2
        with:
          name: composables-build
          path: ./packages/composables/dist/

  build-helpers:
    name: Build helpers package
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Check if heelpers has changed
        uses: marceloprado/has-changed-path@master
        id: package-changed-step
        with:
          paths: packages/heelpers
      - name: Cache helpers build
        if: steps.package-changed-step.outputs.changed != 'true'
        id: step-cache-build
        uses: actions/cache@v2
        env:
          cache-name: test-cache-helpers-build
        with:
          path: |
            packages/helpers/dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Cache node_modules
        if: steps.package-changed-step.outputs.changed == 'true' || steps.step-cache-build.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-test
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Build helpers
        if: steps.package-changed-step.outputs.changed == 'true' || steps.step-cache-build.outputs.cache-hit != 'true'
        run: |
          yarn build helpers --ci
      - name: Upload build folder
        uses: actions/upload-artifact@v2
        with:
          name: helpers-build
          path: ./packages/helpers/dist/

  build-nuxt-module:
    name: Build nuxt-module package
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Check if nuxt-module has changed
        uses: marceloprado/has-changed-path@master
        id: package-changed-step
        with:
          paths: packages/nuxt-module
      - name: Cache nuxt-module build
        if: steps.package-changed-step.outputs.changed != 'true'
        id: step-cache-build
        uses: actions/cache@v2
        env:
          cache-name: test-cache-nuxt-module-build
        with:
          path: |
            packages/nuxt-module/dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Cache node_modules
        if: steps.package-changed-step.outputs.changed == 'true' || steps.step-cache-build.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-test
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Build nuxt-module
        if: steps.package-changed-step.outputs.changed == 'true' || steps.step-cache-build.outputs.cache-hit != 'true'
        run: |
          yarn build nuxt-module --ci
      - name: Upload build folder
        uses: actions/upload-artifact@v2
        with:
          name: nuxt-module-build
          path: ./packages/nuxt-module/dist/

  build-shopware-6-client:
    name: Build shopware-6-client package
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Check if shopware-6-client has changed
        uses: marceloprado/has-changed-path@master
        id: package-changed-step
        with:
          paths: packages/shopware-6-client
      - name: Cache shopware-6-client build
        if: steps.package-changed-step.outputs.changed != 'true'
        id: step-cache-build
        uses: actions/cache@v2
        env:
          cache-name: test-cache-shopware-6-client-build
        with:
          path: |
            packages/shopware-6-client/dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Cache node_modules
        if: steps.package-changed-step.outputs.changed == 'true' || steps.step-cache-build.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-test
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Build shopware-6-client
        if: steps.package-changed-step.outputs.changed == 'true' || steps.step-cache-build.outputs.cache-hit != 'true'
        run: |
          yarn build shopware-6-client --ci
      - name: Upload build folder
        uses: actions/upload-artifact@v2
        with:
          name: shopware-6-client-build
          path: ./packages/shopware-6-client/dist/

  create-test-project:
    name: Create test project
    needs:
      [
        build-cli,
        build-composables,
        build-helpers,
        build-nuxt-module,
        build-shopware-6-client,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-test
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Download cli artifact
        uses: actions/download-artifact@v2
        with:
          name: cli-build
          path: packages/cli/build
      - name: Download composables artifact
        uses: actions/download-artifact@v2
        with:
          name: composables-build
          path: packages/composables/dist
      - name: Download helpers artifact
        uses: actions/download-artifact@v2
        with:
          name: helpers-build
          path: packages/helpers/dist
      - name: Download nuxt-module artifact
        uses: actions/download-artifact@v2
        with:
          name: nuxt-module-build
          path: packages/nuxt-module/dist
      - name: Download shopware-6-client artifact
        uses: actions/download-artifact@v2
        with:
          name: shopware-6-client-build
          path: packages/shopware-6-client/dist
      - name: Link packages
        run: |
          yarn
      - name: Create theme project
        run: |
          mkdir test-project
          cd ./test-project
          ../packages/cli/bin/shopware-pwa init --shopwareEndpoint=${{ env.CANARY_SW6_INSTANCE }} --shopwareAccessToken=${{ env.CANARY_SW6_INSTANCE_TOKEN }} --u ${{ secrets.SHOPWARE_ADMIN_USER }} --p ${{ secrets.SHOPWARE_ADMIN_PASSWORD }} --ci --devMode --stage local
          yarn build
      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@2.19
        if: github.repository_owner	== 'DivanteLtd'
        with:
          name: shopware-pwa-storefrontcloud-io/vue-storefront:${{ github.sha }}
          registry: registry.storefrontcloud.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: ./test-project
          buildoptions: "--compress"
      - name: Add information about PR from forked repo
        if: github.repository_owner	!= 'DivanteLtd'
        uses: mshick/add-pr-comment@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-repeats: false
          message: |
            :warning: This PR comes from forked repository and cannot be deployed on our preview instance!
            Nevertheless, thank you, we are going to see it in action locally first 👍

  deploy:
    runs-on: ubuntu-latest
    needs: create-test-project
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: preview
          initial_status: in_progress
      - name: Deploy on Storefrontcloud.io
        id: deploy
        uses: StorefrontCloud/storefrontcloud-preview-deploy@master
        if: github.repository_owner	== 'DivanteLtd'
        with:
          token: "${{ github.token }}"
          namespace: "${{env.INSTANCE_CODE}}"
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"
      - name: Comment PR
        if: success()
        uses: StorefrontCloud/storefrontcloud-comment-pr-preview-deploy@master
        with:
          preview_url: "${{ steps.deploy.outputs.preview_url }}"
          token: "${{ github.token }}"
          namespace: "${{env.INSTANCE_CODE}}"
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target-url: ${{ steps.deploy.outputs.preview_url }}
          state: "success"
          description: Congratulations! The deploy is done.
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          description: Unfortunately, the instance hasn't been updated.
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
